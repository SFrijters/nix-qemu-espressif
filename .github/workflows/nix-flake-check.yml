name: "nix flake check"
on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - '.gitlab-ci.yml'
  push:
    paths-ignore:
      - 'README.md'
      - '.gitlab-ci.yml'

jobs:
  nix-flake-check:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
      fail-fast: false
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Flake metadata
      run: |
        nix flake metadata
        nix flake show

    - name: Flake check
      run: |
        nix flake check -L --max-jobs 1

    - name: Run qemu-espressif
      run: |
        nix run . -- --version
        nix run . -- --machine help

    - name: Build from overlay without flake
      run: |
        for v in espressif esp32 esp32c3; do
          NIX_PATH=$NIX_PATH:nixpkgs-overlays=$(pwd)/overlays.nix \
          nix-build \
            https://github.com/NixOS/nixpkgs/archive/$(grep rev flake.lock | sed 's/^.*: //' | sed -e 's/"//g' -e 's/,//').tar.gz \
            --attr qemu-${v}${m}
          for exe in ./result/bin/qemu-system-*; do
            echo ${exe}
            ${exe} --version
            ${exe} --machine help
            if [ ${exe} = qemu-system-riscv32 ]; then
              ${exe} --machine help | grep '^esp32c3 ' || (echo ERROR: Did not find expected architecture 'esp32c3'; exit 1)
            elif [ ${exe} = qemu-system-xtensa ]; then
              ${exe} --machine help | grep '^esp32 ' || (echo ERROR: Did not find expected architecture 'esp32'; exit 1)
              ${exe} --machine help | grep '^esp32s3 ' || (echo ERROR: Did not find expected architecture 'esp32s3'; exit 1)
            fi
          done
        done

    - name: Formatter check
      run: |
        nix fmt
        git diff --exit-code
